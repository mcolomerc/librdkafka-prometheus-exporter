---
version: '2'
services: 
  broker:
    image: confluentinc/cp-kafka:7.6.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true 
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid" 
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
      EXTRA_ARGS:
        -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
        -javaagent:/usr/share/jmx-exporter/jolokia-jvm-1.7.1.jar=port=1234,host=*
        -Djava.util.logging.config.file=/usr/share/jmx-exporter/exporter_debug_logging.properties
    volumes:
      -  ./jmx-exporter/:/usr/share/jmx-exporter   

  librdkafka-exporter:
    build: 
      context: ../
      dockerfile: Dockerfile
    container_name: librdkafka-exporter
    environment:
      PORT: 7979
    ports:
      - 7979:7979 
  
  go-client:
    build: 
      context: ./clients/go/
      dockerfile: Dockerfile
    container_name: go-client
    environment:
      TOPIC: test-topic-go
      STATS_EXPORTER_URL: http://librdkafka-exporter:7979
      BOOTSTRAP_SERVERS: broker:29092
    depends_on:
      - librdkafka-exporter
      - broker
  
  js-client:
    build: 
      context: ./clients/js/
      dockerfile: Dockerfile
    container_name: js-client
    environment:
      TOPIC: test-topic-js
      STATS_EXPORTER_URL: http://librdkafka-exporter:7979 
      BOOTSTRAP_SERVERS: broker:29092
      GROUP_ID: js-consumer
    depends_on:
      - librdkafka-exporter
      - broker

  py-client:
    build: 
      context: ./clients/python/
      dockerfile: Dockerfile
    container_name: py-client
    environment:
      TOPIC: test-topic-py
      STATS_EXPORTER_URL: http://librdkafka-exporter:7979 
      BOOTSTRAP_SERVERS: broker:29092 
    depends_on:
      - librdkafka-exporter
      - broker

  dotnet-client:
    build: 
      context: ./clients/dotnet/PrometheusExporter
      dockerfile: Dockerfile
    container_name: dotnet-client
    environment:
      TOPIC: test-topic-dotnet
      STATS_EXPORTER_URL: http://librdkafka-exporter:7979 
      BOOTSTRAP_SERVERS: broker:29092 
    depends_on:
      - librdkafka-exporter
      - broker

  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus 
    depends_on:
      - librdkafka-exporter 

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    environment:
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=password"
      - "GF_USERS_ALLOW_SIGN_UP=false"
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning